---
- name: install packages
  yum:
    name:
      - opensc
      - dconf
    state: present

- name: start and enable services
  service: 
    name: pcscd
    state: started
    enabled: yes

- name: Ensure admin keytab is valid
  shell: "echo {{ ipaadmin_password }} | kinit admin"

- name: update IPA CA cert database
  command: /usr/sbin/ipa-certupdate

- name: Copy Root and Sub chain to client
  copy:
    src: "{{ item }}"
    dest: "/root/"
    owner: root
    group: root
    mode: '0644'
  with_fileglob:
    - "roles/ipaserver/files/{{ current_cert_version}}/*.pem"

- name: Import CA trust chain
  copy:
    src: /root/DoD_CAs.pem
    dest: /etc/pki/ca-trust/source/anchors/DoD_CAs.pem
    owner: root
    group: root
    mode: '0644'
    remote_src: yes

- name: Run CA system update
  shell: update-ca-trust

- name: Clean up certificates
  file:
    path: "/root/{{ item }}"
    state: absent
  with_fileglob:
    - "*.pem"


- name: enable smart card auth
  # lock when card is removed
  #command: authconfig --enablesssd --enablesssdauth --enablesmartcard --smartcardmodule=sssd --smartcardaction=0 --updateall
  # allow card to be removed without locking 
  command: authconfig --enablesssd --enablesssdauth --enablesmartcard --smartcardmodule=sssd --smartcardaction=1 --updateall
  when: ansible_distribution_major_version == "7"

- name: enable smart card auth R8
  command: authselect enable-feature with-smartcard
  when: ansible_distribution_major_version == "8"

- name: enable smart card auth R8
  command: authselect enable-feature with-smartcard-lock-on-removal
  when: ansible_distribution_major_version == "8"

- name: enable local home directory
  command: authselect enable-feature with-mkhomedir
  when: 
    - ansible_distribution_major_version == "8"
    - make_home | bool 

- name: Apply all changes in authselect
  command: authselect apply-changes
  when: ansible_distribution_major_version == "8"

- name: modify krb5_auth_timeout
  lineinfile:
    regexp: '^krb5_auth_timeout*'
    insertafter: '^\[domain*'
    line: 'krb5_auth_timeout = 60'
    path: /etc/sssd/sssd.conf


- name: modify p11_child_timeout
  lineinfile:
    regexp: '^p11_child_timeout*'
    insertafter: '^\[pam\]'
    line: 'p11_child_timeout = 60'
    path: /etc/sssd/sssd.conf

- name: configure ocsp
  lineinfile:
    regexp: '^certificate_verification*'
    insertafter: '^\[sssd\]'
    line: 'certificate_verification = no_ocsp'
    #line: 'certificate_verification = iocsp_default_responder={{ ocsp_proxy }},ocsp_default_responder_signing_cert={{ ocsp_cert_nick }}'
    path: /etc/sssd/sssd.conf

- name: configure sssd to use short usernames
  lineinfile:
    regexp: '^full_name_format*'
    insertafter: '^\[sssd\]'
    line: 'full_name_format = %1$s'
    path: /etc/sssd/sssd.conf

- name: Optimize CAC card configuration
  lineinfile:
    regexp: '^card_drivers'
    insertafter: '^enable_pinpad = false;'
    line: '                card_drivers = cac, PIV-II;'
    path: /etc/opensc.conf

- name: ensure dns_lookup_realm is true 
  lineinfile:
    regexp: 'dns_lookup_realm.*'
    line: '  dns_lookup_realm = true'
    path: /etc/krb5.conf

- name: ensure dns_lookup_kdc is true 
  lineinfile:
    regexp: 'dns_lookup_kdc.*'
    line: '  dns_lookup_kdc = true'
    path: /etc/krb5.conf

- name: ensure eku checking is disabled
  lineinfile:
    regexp: 'pkinit_eku_checking = none'
    line: '  pkinit_eku_checking = none'
    insertbefore: 'realms' 
    path: /etc/krb5.conf

- name: ensure kdc for IDM servers are updated
  lineinfile:
    regexp: "pkinit_kdc_hostname = {{ inventory_hostnames.groups['ipaservers'] }}"
    line: "  pkinit_kdc_hostname = {{ inventory_hostnames.groups['ipaservers'] }}"
    insertbefore: 'realms' 
    path: /etc/krb5.conf

- name: configure alias for pkinit
  lineinfile:
     regexp: '^alias pkinit*'
     line: alias pkinit="kinit -X X509_user_identity='PKCS11:opensc-pkcs11.so'"
     path: /etc/bashrc

- name: restart sssd
  systemd:
    name: sssd
    state: restarted

- name: ensure dns_lookup_realm is true 
  lineinfile:
    regexp: 'dns_lookup_realm.*'
    line: '  dns_lookup_realm = true'
    path: /etc/krb5.conf

- name: ensure dns_lookup_kdc is true 
  lineinfile:
    regexp: 'dns_lookup_kdc.*'
    line: '  dns_lookup_kdc = true'
    path: /etc/krb5.conf

- name: Copy current CA for smart card auth run
  copy:
    src: /etc/ipa/ca.crt
    dest: /root/ca.crt
    remote_src: yes
    owner: root
    group: root
    mode: '0600'

- name: Copy script from role
  copy:
    src: files/config-client-for-smart-card-auth.sh
    dest: /root/config-client-for-smart-card-auth.sh
    owner: root
    group: root
    mode: '0755'

- name: Run config server for Smart Card script
  shell: ./config-client-for-smart-card-auth.sh /etc/ipa/ca.crt
  args:
    chdir: /root
  register: sc_script_debug
  ignore_errors: True
